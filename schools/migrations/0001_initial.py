# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-24 18:15
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='schoolsData',
            fields=[
                ('school_name', models.CharField(blank=True, max_length=200)),
                ('school_code', models.BigIntegerField(primary_key=True, serialize=False)),
                ('district', models.CharField(blank=True, max_length=50)),
                ('block_name', models.CharField(blank=True, max_length=50)),
                ('cluster_name', models.CharField(blank=True, max_length=50)),
                ('village_name', models.CharField(blank=True, max_length=50)),
                ('assembly_name', models.CharField(blank=True, max_length=35)),
                ('parliament_name', models.CharField(blank=True, max_length=35)),
                ('pincode', models.IntegerField(blank=True, null=True)),
                ('new_pincode', models.IntegerField(blank=True, null=True)),
                ('rural_urban', models.IntegerField(blank=True, choices=[(1, 'Rural'), (2, 'Urban')], null=True)),
                ('building_status', models.IntegerField(blank=True, choices=[(1, 'Private '), (2, 'Rented'), (3, 'Government'), (4, 'Government school in a rent free building'), (5, 'No Building'), (6, 'Dilapidated'), (7, 'Under Construction'), (9, 'Unknown')], null=True)),
                ('worker_name', models.CharField(blank=True, max_length=50)),
                ('worker_number', models.CharField(blank=True, max_length=50, null=True)),
                ('helper_name', models.CharField(blank=True, max_length=50)),
                ('helper_number', models.CharField(blank=True, max_length=50, null=True)),
                ('supervisor_name', models.CharField(blank=True, max_length=50)),
                ('supervisor_number', models.CharField(blank=True, max_length=50, null=True)),
                ('cdpo_name', models.CharField(blank=True, max_length=50)),
                ('cdpo_number', models.IntegerField(blank=True, null=True)),
                ('household_covering_the_catchment_area', models.IntegerField(blank=True, null=True)),
                ('total_population_under_center', models.IntegerField(blank=True, null=True)),
                ('pregnant_mothers_in_population', models.IntegerField(blank=True, null=True)),
                ('lactating_mothers_in_population', models.IntegerField(blank=True, null=True)),
                ('total_childrens_in_population', models.IntegerField(blank=True, null=True)),
                ('shelves_in_kitchen', models.IntegerField(blank=True, null=True)),
                ('shelves_required_in_kitchen', models.IntegerField(blank=True, null=True)),
                ('shelves_in_store_room', models.IntegerField(blank=True, null=True)),
                ('shelves_required_in_store_room', models.IntegerField(blank=True, null=True)),
                ('shelves_in_playing_area', models.IntegerField(blank=True, null=True)),
                ('shelves_required_in_playing_area', models.IntegerField(blank=True, null=True)),
                ('building_paint', models.CharField(blank=True, choices=[('new', 'New'), ('old', 'Old')], max_length=50)),
                ('need_painting_in_building', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('need_flooring', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('flooring_requirement_description', models.CharField(blank=True, max_length=50)),
                ('need_ceiling_repair', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('ceiling_requirement_description', models.CharField(blank=True, max_length=50)),
                ('need_walls_repair', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('wallsrepair_requirement_description', models.CharField(blank=True, max_length=50)),
                ('electricity', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('electric_bulbs', models.IntegerField(blank=True, null=True)),
                ('total_electric_bulbs_required', models.IntegerField(blank=True, null=True)),
                ('electric_fans', models.IntegerField(blank=True, null=True)),
                ('total_electric_fans_required', models.IntegerField(blank=True, null=True)),
                ('window_condition', models.IntegerField(blank=True, choices=[(1, 'Good'), (0, 'Bad')], null=True)),
                ('need_window_repair', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('window_repair_description', models.CharField(blank=True, max_length=50)),
                ('door_condition', models.IntegerField(blank=True, choices=[(1, 'Good'), (0, 'Bad')], null=True)),
                ('need_door_repair', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('door_repair_description', models.CharField(blank=True, max_length=50)),
                ('no_of_cooking_vessels', models.IntegerField(blank=True, null=True)),
                ('no_of_cooking_vessels_required', models.IntegerField(blank=True, null=True)),
                ('cooking_vessels_to_be_repaired', models.IntegerField(blank=True, null=True)),
                ('no_of_serving_vessels', models.IntegerField(blank=True, null=True)),
                ('no_of_serving_vessels_required', models.IntegerField(blank=True, null=True)),
                ('mats', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_mats', models.IntegerField(blank=True, null=True)),
                ('no_of_mats_required', models.IntegerField(blank=True, null=True)),
                ('mops', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_mops', models.IntegerField(blank=True, null=True)),
                ('no_of_mops_required', models.IntegerField(blank=True, null=True)),
                ('broom', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_broom', models.IntegerField(blank=True, null=True)),
                ('no_of_broom_required', models.IntegerField(blank=True, null=True)),
                ('dustbin', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_dustbin', models.IntegerField(blank=True, null=True)),
                ('no_of_dustbin_required', models.IntegerField(blank=True, null=True)),
                ('plant_pots', models.IntegerField(blank=True, null=True)),
                ('plant_pots_required', models.IntegerField(blank=True, null=True)),
                ('green_cover', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('green_cover_required', models.IntegerField(blank=True, null=True)),
                ('cleanliness', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('cleanliness_description', models.CharField(blank=True, max_length=100)),
                ('pest_control_done_in_last_one_year', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('pest_control_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('drinking_water', models.IntegerField(blank=True, choices=[(1, 'Hand pumps'), (2, 'Well'), (3, 'Tap water'), (4, 'others'), (5, 'none')], null=True)),
                ('drinking_water_filter', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_drinking_water_filter', models.IntegerField(blank=True, null=True)),
                ('drinking_water_filter_required', models.IntegerField(blank=True, null=True)),
                ('water_taps_in_kitchen', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_water_taps_in_kitchen', models.IntegerField(blank=True, null=True)),
                ('water_taps_in_kitchen_required', models.IntegerField(blank=True, null=True)),
                ('water_taps_in_toilets', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_water_taps_in_toilets', models.IntegerField(blank=True, null=True)),
                ('water_taps_in_kitchen_toilets', models.IntegerField(blank=True, null=True)),
                ('water_storage_containers_in_kitchen', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_water_storage_containers_in_kitchen', models.IntegerField(blank=True, null=True)),
                ('water_storage_containers_in_kitchen_required', models.IntegerField(blank=True, null=True)),
                ('water_storage_containers_in_toilets', models.IntegerField(blank=True, choices=[(0, 'Not Applicable'), (1, 'Yes'), (2, 'No'), (3, 'Yes but not functional'), (4, 'Unknown'), (9, 'Unknown')], null=True)),
                ('no_of_water_storage_containers_in_toilets', models.IntegerField(blank=True, null=True)),
                ('water_storage_containers_in_kitchen_toilets', models.IntegerField(blank=True, null=True)),
                ('toilet_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('toilet_functioning', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('toilet_boys', models.IntegerField(blank=True, null=True)),
                ('toilet_girls', models.IntegerField(blank=True, null=True)),
                ('toilet_common', models.IntegerField(blank=True, null=True)),
                ('toilet_doors', models.IntegerField(blank=True, choices=[(1, 'Good'), (0, 'Bad')], null=True)),
                ('mural_art_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('mural_art_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('learning_and_playing_materials', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('learning_and_playing_materials_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('charts_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('charts_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('story_books_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('story_books_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('drawing_and_art_materials_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('drawing_and_art_materials_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('library_kits_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('library_kits_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('sports_material_available', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('sports_material_required', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('others_required', models.CharField(blank=True, max_length=100)),
                ('mothers_committee_formed', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('no_of_meetings_conducted_in_last_three_months', models.IntegerField(blank=True, null=True)),
                ('meetings_documented_in_register', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('mothers_committee_feedback', models.CharField(blank=True, max_length=100)),
                ('bal_vikas_samiti_formed', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('bal_vikas_samiti_feedback', models.CharField(blank=True, max_length=100)),
                ('meetings_documented', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], null=True)),
                ('arrangements_for_the_children_with_specialneeds_feedback', models.CharField(blank=True, max_length=200)),
                ('arrangements_for_the_children_with_specialneeds_requirements', models.CharField(blank=True, max_length=200)),
                ('male_teachers', models.IntegerField(blank=True, null=True)),
                ('female_teachers', models.IntegerField(blank=True, null=True)),
                ('total_boys', models.IntegerField(blank=True, null=True)),
                ('total_girls', models.IntegerField(blank=True, null=True)),
            ],
        ),
    ]
